<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<context:component-scan base-package="com.luis" />

	<!--Permite hacer la configuracion de MVC mediante anotacions -->
	<mvc:annotation-driven />

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="com.mysql.jdbc.Driver"
		p:url="jdbc:mysql://localhost:3306/empleados?zeroDateTimeBehavior=convertToNull"
		p:username="root" p:password="root" />
		
	<!-- conexion a base de datos del profesor -->
	<!--bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="com.mysql.jdbc.Driver"
		p:url="jdbc:mysql://luisgilpruebas.cloudapp.net:3306/curso?zeroDateTimeBehavior=convertToNull"
		p:username="curso" p:password="curso" /-->
		
	<!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) -->

	<!-- DEFINIMOS EL SESSIONFACTORY QUE SERA EL ENCARGADO DE CREAR Y CERRAR 
		LAS SESION -->
	<!-- Al configurar la conexion aqui es sencillo cambiar el proveedor de 
		la DB -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="configLocation">
			<value>WEB-INF/classes/conf/hibernate.cfg.xml</value>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLDialect
				</prop>
				<prop key="show_sql">
					true
				</prop>
			</props>
		</property>
	</bean>

	<!-- GESTOR DE TRANSACCIONES - Encargado de manipular el inicio de la transaccion 
		y los commits -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!--Aqui indicamos que el elemento para manejar las transacciones es txManager 
		y que se realizaran mediante anotaciones. Lo normal seria que el destina 
		de las trasacciones fuesen interfaces pero como no lo hemos creado asi marcamos 
		proxy-target-class -->
	<tx:annotation-driven transaction-manager="txManager"
		proxy-target-class="true" />
		
	<bean id="daoEmpleado" class="com.luis.services.ManagerEmpleados">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="daoPuesto" class="com.luis.services.ManagerPuestos">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    
    <bean id="daoConocimiento" class="com.luis.services.ManagerConocimientos">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

</beans>
